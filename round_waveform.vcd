$date
	Mon Jul  1 13:37:54 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module round_tb $end
$var wire 64 ! y [63:0] $end
$var reg 32 " k [31:0] $end
$var reg 64 # x [63:0] $end
$var integer 32 $ mismatch_count [31:0] $end
$scope module UUT $end
$var wire 32 % k [31:0] $end
$var wire 64 & x [63:0] $end
$var wire 64 ' y [63:0] $end
$var wire 32 ( x_1 [31:0] $end
$var wire 32 ) x_0 [31:0] $end
$var wire 32 * rol_8 [31:0] $end
$var wire 32 + rol_2 [31:0] $end
$var wire 32 , rol_1 [31:0] $end
$upscope $end
$scope task check_result $end
$var integer 32 - test_case [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
b10010001101000101011001110 ,
b100100011010001010110011100 +
b100011010001010110011100000001 *
b10001001101010111100110111101111 )
b1001000110100010101100111 (
b111000110111110011000001110101100000001001000110100010101100111 '
b100100011010001010110011110001001101010111100110111101111 &
b11111110110111001011101010011000 %
b0 $
b100100011010001010110011110001001101010111100110111101111 #
b11111110110111001011101010011000 "
b111000110111110011000001110101100000001001000110100010101100111 !
$end
#10000
b1000100100010001100110 ,
b10001001000100011001100 +
b10001001000100011001100000000 *
b1000100010101010110011001110111 )
b1100110010101010010001000000000000000000000100010010001000110011 !
b1100110010101010010001000000000000000000000100010010001000110011 '
b100010010001000110011 (
b10001000100110011010101010111011 "
b10001000100110011010101010111011 %
b10001001000100011001101000100010101010110011001110111 #
b10001001000100011001101000100010101010110011001110111 &
b1 -
#20000
b10011010101111001101111011111 ,
b100110101011110011011110111110 +
b10101011110011011110111110001001 *
b1001000110100010101100111 )
b101001010011101110010110100000010001001101010111100110111101111 !
b101001010011101110010110100000010001001101010111100110111101111 '
b10001001101010111100110111101111 (
b1110110010101000011001000010000 "
b1110110010101000011001000010000 %
b1000100110101011110011011110111100000001001000110100010101100111 #
b1000100110101011110011011110111100000001001000110100010101100111 &
b10 -
#30000
b11111101101110010111010100110001 ,
b11111011011100101110101001100011 +
b11011100101110101001100011111110 *
b1110110010101000011001000010000 )
b101000010111101100011010010010011111110110111001011101010011000 !
b101000010111101100011010010010011111110110111001011101010011000 '
b11111110110111001011101010011000 (
b1001000110100010101100111 "
b1001000110100010101100111 %
b1111111011011100101110101001100001110110010101000011001000010000 #
b1111111011011100101110101001100001110110010101000011001000010000 &
b11 -
#40000
b10010101111111010111010101111101 ,
b101011111110101110101011111011 +
b11111110101110101011111011001010 *
b11011110101011011011111011101111 )
b1001000100001110101100101001111111001010111111101011101010111110 !
b1001000100001110101100101001111111001010111111101011101010111110 '
b11001010111111101011101010111110 (
b11110000111000011101001011000011 "
b11110000111000011101001011000011 %
b1100101011111110101110101011111011011110101011011011111011101111 #
b1100101011111110101110101011111011011110101011011011111011101111 &
b100 -
#50000
b101 -
